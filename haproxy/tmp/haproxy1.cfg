global
    log stdout format raw local0
    maxconn 500000
    nbthread 4
    tune.ssl.default-dh-param 2048
    stats socket /var/run/haproxy.sock mode 600 level admin

defaults
    log     global
    timeout connect 5s
    timeout client  300s
    timeout server  300s
    maxconn 500000

##################################
# TLS Multiplexer - SNI Routing  #
##################################
frontend fe_tls_multiplexer
    bind *:443 ssl crt /etc/ssl/certs/
    mode tcp
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    use_backend be_https_router if { req.ssl_sni -i auth.smartconsultor.com www.smartconsultor.com }
    use_backend be_gateway_cluster if { req.ssl_sni -i -m beg ws }

##########################################
# Backend cho TLS SNI => HTTP Routing    #
##########################################
backend be_https_router
    mode tcp
    option ssl-hello-chk
    server local_http 127.0.0.1:8443 send-proxy-v2 check

frontend fe_https_router
    bind 127.0.0.1:8443 accept-proxy ssl crt /etc/ssl/certs/
    mode http
    option httplog

    acl host_auth hdr(host) -i auth.smartconsultor.com www.smartconsultor.com
    acl path_api  path_beg /api

    use_backend be_api_service if host_auth path_api
    use_backend be_keycloak if host_auth !path_api
    default_backend be_deny_all

backend be_api_service
    mode http
    balance roundrobin
    option http-server-close
    option httpchk GET /metrics/active_users
    http-check expect status 200
    server api1 gateway.microservices.svc.cluster.local:8080 check

backend be_keycloak
    mode http
    balance roundrobin
    option http-server-close
    server kc1 keycloak.keycloak.svc.cluster.local:8080 check

backend be_deny_all
    mode http
    http-request deny deny_status 403

###########################################
# Unified Gateway Backend for TCP (ws)   #
###########################################
backend be_gateway_cluster
    mode tcp
    balance roundrobin
    option tcp-check
    server gw0 gateway-0.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw1 gateway-1.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw2 gateway-2.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw3 gateway-3.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw4 gateway-4.gateway-headless.microservices.svc.cluster.local:8080 check

##################################
# HTTP Entry Point (Port 80)     #
##################################
frontend fe_http_gateway
    bind *:80
    mode http
    default_backend be_gateway_http

backend be_gateway_http
    mode http
    balance roundrobin
    option httpchk GET /metrics/active_users
    http-check expect status 200
    server gw0 gateway-0.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw1 gateway-1.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw2 gateway-2.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw3 gateway-3.gateway-headless.microservices.svc.cluster.local:8080 check
    server gw4 gateway-4.gateway-headless.microservices.svc.cluster.local:8080 check
